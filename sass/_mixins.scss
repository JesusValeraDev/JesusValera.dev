// Responsive Breakpoints
@mixin respond-below($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media screen and (max-width: map-get($breakpoints, $breakpoint) - 1px) {
      @content;
    }
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

// Typography Mixins
@mixin font-size($size) {
  @if map-has-key($font-sizes, $size) {
    font-size: map-get($font-sizes, $size);
  } @else {
    @warn "Unfortunately, no value could be retrieved from `#{$size}`. "
        + "Available font sizes are: #{map-keys($font-sizes)}.";
  }
}

@mixin typography($size, $weight: normal, $line-height: 1.5) {
  @include font-size($size);
  font-weight: $weight;
  line-height: $line-height;
}

// Transitions
@mixin transition($properties: all, $duration: $transition-duration, $timing: $transition-timing) {
  transition: $properties $duration $timing;
}

// Layout Mixins
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin container($max-width: 56rem) {
  max-width: $max-width;
  margin-left: auto;
  margin-right: auto;
  padding-left: spacing(4);
  padding-right: spacing(4);
}

// Visual Effects
@mixin button-reset {
  background: none;
  border: none;
  padding: 0;
  cursor: pointer;
  outline: none;

  &:focus {
    outline: none;
  }
}


@mixin card-shadow {
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06);

  &:hover {
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.08), 0 1px 2px rgba(0, 0, 0, 0.04);

    // Enhanced shadow for dark mode
    .theme-dark & {
      box-shadow: 0 2px 4px rgba(0, 0, 0, .4), 0 4px 8px rgba(0, 0, 0, .2);
    }
  }
}

// Spacing Utilities

@mixin padding($size) {
  padding: spacing($size);
}

@mixin margin-x($size) {
  margin-left: spacing($size);
  margin-right: spacing($size);
}

@mixin margin-y($size) {
  margin-top: spacing($size);
  margin-bottom: spacing($size);
}

@mixin padding-x($size) {
  padding-left: spacing($size);
  padding-right: spacing($size);
}

@mixin padding-y($size) {
  padding-top: spacing($size);
  padding-bottom: spacing($size);
}
