.book-info {
  @extend .card-info;

  // Remove hover effect in dark mode
  .theme-dark & {
    &:hover {
      background-color: var(--catalogue-item-bg);
      transform: none;
      box-shadow: none;
    }
  }
}

.book-tags {
  @extend .btn-group;

  button {
    @extend .btn-pill;
  }

  button[selected="true"] {
    @extend .btn-pill;

    &.btn-pill {
      background-color: var(--text-primary);
      color: var(--bg);
      border-color: var(--text-primary);

      &:hover {
        background-color: var(--text-secondary);
        border-color: var(--text-secondary);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
      }

      svg {
        color: var(--bg);
      }
    }
  }
}

.books {
  @extend .grid-books;

  .book-item {
    @extend .grid-item;

    .book-cover {
      @extend .item-cover;

      .date {
        @extend .badge-overlay;
      }
    }

    .book-content {
      @extend .item-content;

      .title {
        @extend .item-title;
      }

      .author {
        @extend .item-subtitle;
      }
    }
  }
}

// Legacy responsive styles removed - now handled by .grid-books component
// All book styling is now managed through the component system in _components.scss

// Responsive styles for book tags
@include respond-below(sm) {
  .book-tags button {
    max-width: calc(100% - 1rem);
  }
}

@include respond-below(md) {
  .book-tags button {
    max-width: calc(50% - 1rem);
  }
}

@include respond-below(lg) {
  .book-tags button {
    max-width: calc(33.333% - 1rem);
  }
}
