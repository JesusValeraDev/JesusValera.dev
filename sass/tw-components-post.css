@layer components {
  .post-meta { @apply flex items-center gap-4 whitespace-nowrap w-full text-light-text-secondary dark:text-dark-text-secondary; }
  .post-meta time { @apply inline-flex items-center gap-4; }
  .post-meta .day, .post-meta .reading, .post-meta .found-typo { @apply inline-flex items-center gap-1; }
  .post-meta .found-typo { @apply ml-auto; }
  .post-meta svg { @apply w-3 h-3; }

  .post-title { @apply text-3xl md:text-4xl font-extrabold tracking-tight text-light-text-primary dark:text-dark-text-primary mt-4 mb-2 pt-2 pb-1; }
  .post-subtitle { @apply text-lg md:text-xl font-medium text-light-text-secondary dark:text-dark-text-secondary mt-1 mb-2 pt-0; }

  /* Post typography */
  .post a { @apply text-light-link dark:text-dark-link no-underline hover:underline; }
  .post h1,.post h2,.post h3,.post h4,.post h5,.post h6 { @apply text-light-text-primary dark:text-dark-text-primary; }
  .post h1 { @apply text-3xl md:text-4xl font-bold; }
  .post h2 { @apply text-2xl md:text-3xl font-bold; }
  .post h3 { @apply text-xl md:text-2xl font-semibold; }
  .post h4 { @apply text-lg md:text-xl font-semibold; }
  .post h5 { @apply text-base md:text-lg font-medium; }
  .post h6 { @apply text-sm md:text-base font-medium; }

  .post .post-subtitle { @apply font-medium; }
  .post p { @apply leading-relaxed; }
  .post ul { @apply list-disc pl-6; }
  .post ol { @apply list-decimal pl-6; }
  .post hr { @apply my-8 border-t border-light-border dark:border-dark-border; }
  .post img { @apply rounded-md my-6; }
  .post .book-cover img { @apply m-0 rounded-none; }

  /* Code */
  .post pre { @apply bg-light-code-bg dark:bg-dark-code-bg rounded-lg p-4 overflow-x-auto text-sm leading-relaxed dark:text-dark-text-accent; }
  .post pre code { @apply bg-transparent p-0 dark:text-dark-text-accent; }
  .post :not(pre)>code {
    @apply px-1.5 py-0.5 rounded text-[0.9em] font-mono whitespace-nowrap;
    background: theme('colors.light-code-inline-bg');
    color: theme('colors.light-text-accent');
    /* Hide literal backticks if present inside inline code */
    position: relative;
  }
  .dark .post :not(pre)>code {
    background: theme('colors.dark-code-inline-bg');
    color: theme('colors.dark-text-accent');
  }
  .post :not(pre)>code::before,
  .post :not(pre)>code::after { content: none; }
  /* Keep inline code unwrapped; pre handles long code blocks */
  .post p > code + a,
  .post li > code + a { @apply inline whitespace-nowrap align-baseline; }
  .post p > code + a svg,
  .post li > code + a svg { @apply inline-block align-middle; }

  .post blockquote { @apply my-6; }
}
